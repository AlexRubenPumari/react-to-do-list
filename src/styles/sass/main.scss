@use './config.scss' as c;
@use './base.scss';
@use './buttons.scss';
@use './Modal.scss';
@use './Prompt.scss';
@use './Task.scss';

.Title {
  font: {
    size: 1.4rem;
    weight: bold;
  }
  margin-bottom: 0.8em;
}
.TasksContainer {
  @extend %FlexColumnContainer;
  gap: 5px;
}
.ContainerPpal {
  display: grid;
  grid-template-rows: min-content auto;
  justify-items: center;
  gap: 1rem;
  position: relative;
  height: 100dvh;
  padding: 2rem 1rem;
}
.error {
  color: red;
  font: {
    weight: bold;
    size: var(--fs-xs);
  }
  &--prompt {
    position: absolute;
    top: 100%;
    left: 0;
  }
}

@media (hover: hover) {
  .Task {
    &__content:hover {
      background-color: var(--color-quaternary-02);
    }
  }
  .Button {
    &--ppal:hover {
      background-color: var(--color-terciary-02);
    }
    &--sec:hover {
      text: {
        decoration: underline;
        decoration-thickness: 2px;
      }
    }
  }
  .CircleButton {
    &--addTask:hover {
      background-color: var(--color-terciary-02);
    }
    &--taskOptions:hover {
      background-color: var(--color-quaternary-02);
    }
  }
  .CloseButton {
    &:hover {
      color: var(--color-primary-03);
    }
  }
}
@media (hover: none) {
  :root {
    --p-sm: 0.6em;
    --p-m: 1.1em;
    --p-l: 1.8em;
  }
  * {
    -webkit-tap-highlight-color: transparent;
  }
}
@media (max-width: 700px) {
  .Task__menu {
    background-color: var(--color-quaternary-01);
    border-radius: 1em / 50%;
    padding: var(--p-sm) var(--p-l);
    height: 3em;
    position: fixed;
    left: 50%;
    bottom: 1.9rem;
    transform: translateX(-50%);
  }
}
